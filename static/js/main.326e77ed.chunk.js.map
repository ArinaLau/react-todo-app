{"version":3,"sources":["Todo.js","App.js","index.js"],"names":["Todo","todo","dispatch","inputRef","useRef","isInEditMode","className","type","disabled","defaultValue","name","ref","onClick","ACTIONS","EXIT_EDIT","payload","id","current","value","EDIT_TODO","onChange","TOGGLE_TODO","complete","DELETE_TODO","ADD_TODO","initialState","JSON","parse","localStorage","getItem","newTodo","Date","now","reducer","todos","action","map","filter","App","useReducer","useState","setName","useEffect","setItem","stringify","placeholder","e","target","preventDefault","alert","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.326e77ed.chunk.js","sourcesContent":["import React, { useRef } from 'react'\r\nimport { ACTIONS } from './App'\r\n\r\nexport default function Todo({ todo, dispatch }) {\r\n   const inputRef = useRef()\r\n\r\n    return (\r\n        todo.isInEditMode ?\r\n        <div className=\"todo-list-section\">\r\n            <input className=\"todo-toggle\" type=\"checkbox\" disabled/>\r\n\r\n            <input \r\n                className=\"todo-input\"\r\n                type=\"text\" \r\n                defaultValue={todo.name}\r\n                ref={inputRef}\r\n            />\r\n\r\n            <button className=\"btn btn-edit\" onClick={() => {\r\n                  dispatch({ type: ACTIONS.EXIT_EDIT , payload: { id: todo.id, name: inputRef.current.value }})\r\n              }}>OK</button>\r\n            \r\n            <button className=\"btn btn-remove\" onClick={() => {\r\n                  dispatch({ type: ACTIONS.EDIT_TODO , payload: { id: todo.id }})\r\n              }}>Cancel</button>\r\n \r\n        </div> :\r\n        <div className=\"todo-list-section\">\r\n              <input className=\"todo-toggle\" type=\"checkbox\" onChange={() => {\r\n                    dispatch({ type: ACTIONS.TOGGLE_TODO , payload: { id: todo.id }})\r\n                }} />\r\n\r\n              <p className={`todo${todo.complete ? ' done' : '' }`} >{todo.name}</p>\r\n\r\n              <button className=\"btn btn-edit\" onClick={() => {\r\n                  dispatch({ type: ACTIONS.EDIT_TODO , payload: { id: todo.id }})\r\n              }}>Edit</button>\r\n              \r\n              <button className=\"btn btn-remove\" onClick={() => {\r\n                    dispatch({ type: ACTIONS.DELETE_TODO , payload: { id: todo.id }})\r\n              }}>Remove</button>\r\n          </div>\r\n    )\r\n}\r\n","import React, { useState, useReducer, useEffect } from 'react';\r\nimport Todo from './Todo';\r\n\r\n/*TO ADD  \r\n//1. EDIT FUNCTION\r\n//2. LOCAL STORAGE\r\nXX3. NAVBAR - ACTIVE/COMPLETED/ALL\r\n4. ALERT MESSAGE FOR EMPTY TODO\r\nXX5. SEE THE DATE WHEN CREATED/LAST EDITED TODO\r\n*/\r\n\r\nexport const ACTIONS = {\r\n    ADD_TODO: 'add-todo',\r\n    DELETE_TODO: 'delete-todo',\r\n    TOGGLE_TODO: 'toggle-todo',\r\n    EDIT_TODO: 'edit-todo',\r\n    EXIT_EDIT: 'exit-edit'\r\n}\r\n\r\nconst LOCAL_STORAGE_KEY = 'todoApp.todos';\r\n\r\n//Initalising state of the component\r\n// function setInitialState(){\r\n//   const initialState = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY))\r\n//   if(initialState) newTodo(initialState)\r\n// }\r\nconst initialState = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY))\r\n\r\n// function getRandomInt(max) {\r\n//   return Math.floor(Math.random() * Math.floor(max));\r\n// }\r\nfunction newTodo(name){\r\n  return {id: Date.now(), name: name, complete:false, isInEditMode: false}\r\n}\r\n\r\nfunction reducer(todos, action){\r\n\r\n    switch(action.type){\r\n\r\n      case ACTIONS.ADD_TODO:\r\n        if(todos){\r\n          return [...todos, newTodo(action.payload.name)];\r\n        }\r\n        else\r\n          return [todos, newTodo(action.payload.name)];\r\n            \r\n\r\n      case ACTIONS.TOGGLE_TODO:\r\n        return todos.map(todo => {\r\n            if(todo.id === action.payload.id){\r\n                return {...todo, complete: !todo.complete}\r\n            }\r\n            return todo\r\n        });\r\n\r\n      case ACTIONS.DELETE_TODO:\r\n          return todos.filter(todo => todo.id !== action.payload.id);\r\n      \r\n      case ACTIONS.EDIT_TODO:\r\n        return todos.map((todo => {\r\n          if(todo.id === action.payload.id){\r\n            return {...todo, isInEditMode: !todo.isInEditMode}\r\n          }\r\n          return todo\r\n      }));\r\n\r\n      case ACTIONS.EXIT_EDIT:\r\n        return todos.map((todo => {\r\n          if(todo.id === action.payload.id){\r\n            return {...todo, isInEditMode : false, name: action.payload.name}\r\n          }\r\n          return todo\r\n      }));\r\n\r\n\r\n      default:\r\n        return todos;\r\n    }\r\n    \r\n}\r\n\r\nfunction App() {\r\n\r\n  //initialize the reducer\r\n  const [todos, dispatch] = useReducer(reducer, initialState)\r\n  const [name, setName] = useState('')\r\n\r\n  // listens for changes in the state, when changed it updates the localStorage value of name\r\n\tuseEffect(() => {\r\n\t\tlocalStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos))\r\n\t}, [todos]);\r\n  \r\n  function handleSubmit(e){\r\n    e.preventDefault()\r\n    if(name === \"\") {\r\n      alert('Empty todo')\r\n      return\r\n    }\r\n    dispatch({type: ACTIONS.ADD_TODO, payload: {name: name}})\r\n    setName('')\r\n  }\r\n  \r\n  // let todosToRender\r\n  // if(todos){\r\n  //   todosToRender = todos.map(todo => {\r\n  //     return <Todo key={todo.id} todo={todo} dispatch={dispatch} />\r\n  //   });\r\n  // }\r\n\r\n  return (\r\n    <div className=\"todo-app-container\">\r\n          <div className=\"mb-4\">\r\n            <h1 className=\"header\">React Todo App</h1>\r\n    \r\n            <div className=\"add-todo-section\">\r\n    \r\n                <input className=\"todo-input\" type=\"text\" placeholder=\"Add Todo\" value={name} onChange={e => setName(e.target.value)} />\r\n    \r\n                <button className=\"btn btn-add\" onClick={handleSubmit}>Add</button>\r\n            </div>\r\n          </div>\r\n            \r\n          <div>{todos.map(todo => {\r\n            return <Todo key={todo.id} todo={todo} dispatch={dispatch} />\r\n          })}</div>\r\n    \r\n        </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './assets/main.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}